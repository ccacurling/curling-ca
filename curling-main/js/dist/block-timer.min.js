"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}jQuery(document).ready(function(e){e.fn.blockHeroTimer=function(n){return this.each(function(){var e=jQuery(this),t=e.data("curling.block-hero-timer");t||e.hasClass("js-block-hero-timer-init")||(t=new r(e,"object"==_typeof(n)&&n),e.data("curling.block-hero-timer",t))})};var r=function e(t,n){var a=this;_classCallCheck(this,e),_defineProperty(this,"updateTime",function(e){var t=(e-new Date)/1e3,n=Math.floor(t/86400),r=Math.floor((t-86400*n)/3600),o=Math.floor((t-86400*n-3600*r)/60),i=Math.floor(t-86400*n-3600*r-60*o);a.element.find(".js-days").text(n),a.element.find(".js-hours").text(r),a.element.find(".js-minutes").text(o),a.element.find(".js-seconds").text(i)}),_defineProperty(this,"inDays",function(e,t){var n=t.getTime(),r=e.getTime();return parseInt((n-r)/864e5)}),_defineProperty(this,"inWeeks",function(e,t){var n=t.getTime(),r=e.getTime();return parseInt((n-r)/6048e5)}),_defineProperty(this,"inMonths",function(e,t){var n=e.getFullYear(),r=t.getFullYear(),o=e.getMonth();return t.getMonth()+12*r-(o+12*n)}),_defineProperty(this,"inYears",function(e,t){return t.getFullYear()-e.getFullYear()}),this.element=t;var r=this.element.data("date"),o=new Date,i=new Date(1e3*r);0<i-o&&(this.updateTime(i),window.setInterval(function(){a.updateTime(i)},1e3))};jQuery.fn.blockHeroTimer.Constructor=r});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdGltZXIubWluLmpzIiwic291cmNlcyI6WyJqcy9ibG9ja3MvYmxvY2stdGltZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsialF1ZXJ5KGRvY3VtZW50KS5yZWFkeSgoJCkgPT4ge1xuICAkLmZuLmJsb2NrSGVyb1RpbWVyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0ICR0aGlzID0galF1ZXJ5KHRoaXMpO1xuICAgICAgICBsZXQgZGF0YSA9ICR0aGlzLmRhdGEoJ2N1cmxpbmcuYmxvY2staGVyby10aW1lcicpO1xuXG4gICAgICAgIGlmICghZGF0YSAmJiAhJHRoaXMuaGFzQ2xhc3MoJ2pzLWJsb2NrLWhlcm8tdGltZXItaW5pdCcpKSB7XG4gICAgICAgICAgICBkYXRhID0gbmV3IEJsb2NrSGVyb1RpbWVyKCR0aGlzLCB0eXBlb2Ygb3B0aW9ucyA9PSAnb2JqZWN0JyAmJiBvcHRpb25zKTtcbiAgICAgICAgICAgICR0aGlzLmRhdGEoJ2N1cmxpbmcuYmxvY2staGVyby10aW1lcicsIGRhdGEpO1xuICAgICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjbGFzcyBCbG9ja0hlcm9UaW1lciB7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudCwgb3B0aW9ucykge1xuICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgIFxuICAgICAgY29uc3QgdW5peFRpbWUgPSB0aGlzLmVsZW1lbnQuZGF0YSgnZGF0ZScpO1xuXG4gICAgICBjb25zdCBjdXJyZW50ID0gbmV3IERhdGUoKTtcbiAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUodW5peFRpbWUgKiAxMDAwKTtcblxuICAgICAgaWYgKHN0YXJ0IC0gY3VycmVudCA+IDApIHtcbiAgICAgICAgdGhpcy51cGRhdGVUaW1lKHN0YXJ0KTtcbiAgICAgICAgd2luZG93LnNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVGltZShzdGFydCk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgfVxuICAgIH1cblxuICB1cGRhdGVUaW1lID0gKHN0YXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBjb25zdCB0b3RhbHNlY29uZHMgPSAoc3RhcnQgLSBjdXJyZW50KSAvIDEwMDA7XG4gICAgICAgIGNvbnN0IGRheXMgPSBNYXRoLmZsb29yKHRvdGFsc2Vjb25kcyAvICgzNjAwICogMjQpKTtcbiAgICAgICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKCh0b3RhbHNlY29uZHMgLSAoZGF5cyAqICgzNjAwICogMjQpKSkgLyAzNjAwKTtcbiAgICAgICAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoKHRvdGFsc2Vjb25kcyAtIChkYXlzICogKDM2MDAgKiAyNCkpIC0gKGhvdXJzICogMzYwMCkpIC8gNjApO1xuICAgICAgICBjb25zdCBzZWNvbmRzID0gTWF0aC5mbG9vcih0b3RhbHNlY29uZHMgLSAoZGF5cyAqICgzNjAwICogMjQpKSAtIChob3VycyAqIDM2MDApIC0gKG1pbnV0ZXMgKiA2MCkpO1xuXG4gICAgICAgIHRoaXMuZWxlbWVudC5maW5kKCcuanMtZGF5cycpLnRleHQoZGF5cyk7XG4gICAgICAgIHRoaXMuZWxlbWVudC5maW5kKCcuanMtaG91cnMnKS50ZXh0KGhvdXJzKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LmZpbmQoJy5qcy1taW51dGVzJykudGV4dChtaW51dGVzKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LmZpbmQoJy5qcy1zZWNvbmRzJykudGV4dChzZWNvbmRzKTtcbiAgICB9XG5cbiAgICBpbkRheXMgPSAoZDEsIGQyKSA9PiB7XG4gICAgICB2YXIgdDIgPSBkMi5nZXRUaW1lKCk7XG4gICAgICB2YXIgdDEgPSBkMS5nZXRUaW1lKCk7XG5cbiAgICAgIHJldHVybiBwYXJzZUludCgodDItdDEpLygyNCozNjAwKjEwMDApKTtcbiAgICB9XG5cbiAgICBpbldlZWtzID0gKGQxLCBkMikgPT4ge1xuICAgICAgICB2YXIgdDIgPSBkMi5nZXRUaW1lKCk7XG4gICAgICAgIHZhciB0MSA9IGQxLmdldFRpbWUoKTtcblxuICAgICAgICByZXR1cm4gcGFyc2VJbnQoKHQyLXQxKS8oMjQqMzYwMCoxMDAwKjcpKTtcbiAgICB9XG5cbiAgICBpbk1vbnRocyA9IChkMSwgZDIpID0+IHtcbiAgICAgICAgdmFyIGQxWSA9IGQxLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIHZhciBkMlkgPSBkMi5nZXRGdWxsWWVhcigpO1xuICAgICAgICB2YXIgZDFNID0gZDEuZ2V0TW9udGgoKTtcbiAgICAgICAgdmFyIGQyTSA9IGQyLmdldE1vbnRoKCk7XG5cbiAgICAgICAgcmV0dXJuIChkMk0rMTIqZDJZKS0oZDFNKzEyKmQxWSk7XG4gICAgfVxuXG4gICAgaW5ZZWFycyA9IChkMSwgZDIpID0+IHtcbiAgICAgICAgcmV0dXJuIGQyLmdldEZ1bGxZZWFyKCktZDEuZ2V0RnVsbFllYXIoKTtcbiAgICB9XG4gIH1cbiAgXG4gIGpRdWVyeS5mbi5ibG9ja0hlcm9UaW1lci5Db25zdHJ1Y3RvciA9IEJsb2NrSGVyb1RpbWVyO1xufSk7XG4iXSwibmFtZXMiOlsialF1ZXJ5IiwiZG9jdW1lbnQiLCJyZWFkeSIsIiQiLCJmbiIsImJsb2NrSGVyb1RpbWVyIiwib3B0aW9ucyIsInRoaXMiLCJlYWNoIiwiJHRoaXMiLCJkYXRhIiwiaGFzQ2xhc3MiLCJCbG9ja0hlcm9UaW1lciIsIl90eXBlb2YiLCJlbGVtZW50Iiwic3RhcnQiLCJ0b3RhbHNlY29uZHMiLCJEYXRlIiwiZGF5cyIsIk1hdGgiLCJmbG9vciIsImhvdXJzIiwibWludXRlcyIsInNlY29uZHMiLCJfdGhpcyIsImZpbmQiLCJ0ZXh0IiwiZDEiLCJkMiIsInQyIiwiZ2V0VGltZSIsInQxIiwicGFyc2VJbnQiLCJkMVkiLCJnZXRGdWxsWWVhciIsImQyWSIsImQxTSIsImdldE1vbnRoIiwidW5peFRpbWUiLCJjdXJyZW50IiwidXBkYXRlVGltZSIsIndpbmRvdyIsInNldEludGVydmFsIiwiQ29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJnZkFBQUEsT0FBT0MsVUFBVUMsTUFBTSxTQUFDQyxHQUN0QkEsRUFBRUMsR0FBR0MsZUFBaUIsU0FBU0MsVUFDdEJDLEtBQUtDLEtBQUssZUFDUEMsRUFBUVQsT0FBT08sTUFDakJHLEVBQU9ELEVBQU1DLEtBQUssNEJBRWpCQSxHQUFTRCxFQUFNRSxTQUFTLDhCQUN6QkQsRUFBTyxJQUFJRSxFQUFlSCxFQUF5QixVQUFsQkksUUFBT1AsSUFBdUJBLEdBQy9ERyxFQUFNQyxLQUFLLDJCQUE0QkEsV0FLM0NFLEVBQ0osV0FBWUUsRUFBU1Isd0VBZ0JWLFNBQUNTLE9BRUZDLEdBQWdCRCxFQUROLElBQUlFLE1BQ3FCLElBQ25DQyxFQUFPQyxLQUFLQyxNQUFNSixTQUNsQkssRUFBUUYsS0FBS0MsT0FBT0osUUFBZ0JFLEdBQXVCLE1BQzNESSxFQUFVSCxLQUFLQyxPQUFPSixRQUFnQkUsRUFBK0IsS0FBUkcsR0FBaUIsSUFDOUVFLEVBQVVKLEtBQUtDLE1BQU1KLFFBQWdCRSxFQUErQixLQUFSRyxFQUEyQixHQUFWQyxHQUVuRkUsRUFBS1YsUUFBUVcsS0FBSyxZQUFZQyxLQUFLUixHQUNuQ00sRUFBS1YsUUFBUVcsS0FBSyxhQUFhQyxLQUFLTCxHQUNwQ0csRUFBS1YsUUFBUVcsS0FBSyxlQUFlQyxLQUFLSixHQUN0Q0UsRUFBS1YsUUFBUVcsS0FBSyxlQUFlQyxLQUFLSCxtQ0FHakMsU0FBQ0ksRUFBSUMsT0FDUkMsRUFBS0QsRUFBR0UsVUFDUkMsRUFBS0osRUFBR0csaUJBRUxFLFVBQVVILEVBQUdFLDJDQUdaLFNBQUNKLEVBQUlDLE9BQ1BDLEVBQUtELEVBQUdFLFVBQ1JDLEVBQUtKLEVBQUdHLGlCQUVMRSxVQUFVSCxFQUFHRSw2Q0FHYixTQUFDSixFQUFJQyxPQUNSSyxFQUFNTixFQUFHTyxjQUNUQyxFQUFNUCxFQUFHTSxjQUNURSxFQUFNVCxFQUFHVSxrQkFDSFQsRUFBR1MsV0FFRCxHQUFHRixHQUFNQyxFQUFJLEdBQUdILG9DQUd0QixTQUFDTixFQUFJQyxVQUNKQSxFQUFHTSxjQUFjUCxFQUFHTyxxQkFyRHhCcEIsUUFBVUEsTUFFVHdCLEVBQVcvQixLQUFLTyxRQUFRSixLQUFLLFFBRTdCNkIsRUFBVSxJQUFJdEIsS0FDZEYsRUFBUSxJQUFJRSxLQUFnQixJQUFYcUIsR0FFRCxFQUFsQnZCLEVBQVF3QixTQUNMQyxXQUFXekIsR0FDaEIwQixPQUFPQyxZQUFZLFdBQ2ZsQixFQUFLZ0IsV0FBV3pCLElBQ2pCLE9BOENUZixPQUFPSSxHQUFHQyxlQUFlc0MsWUFBYy9CIn0=
