"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function responsivelySlick(e,t){var i=e(".text-callouts-group.slick-initialized");t<1170&&0===i.length?e(".text-callouts-group").slick({slidesToShow:1,slidesToScroll:1,speed:500,fade:!0,cssEase:"linear",dots:!0,centerMode:!0}):1170<=t&&0<i.length&&e(".text-callouts-group").slick("unslick")}jQuery(document).ready(function(a){jQuery.fn.curlingNav=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.nav");t||e.hasClass("js-curling-nav-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("curling.nav",t))})};var n=function e(t,i){_classCallCheck(this,e),this.element=t,this.menuItems=this.element.find(".nav-menu-primary .menu-item"),this.menuItems.each(function(e,t){var i=a(t),n=i.data("menu"),s=a(".nav-menu-popup[data-name='".concat(n,"']"));i.add(".nav-menu-popup[data-name='".concat(n,"']")).mouseenter(function(){i.addClass("active"),s.addClass("active")}).mouseleave(function(){i.removeClass("active"),s.removeClass("active")})})};jQuery.fn.curlingNav.Constructor=n}),jQuery(document).ready(function(s){jQuery.fn.curlingNavMobile=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.mobilenav");t||e.hasClass("js-curling-mobilenav-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("curling.mobilenav",t))})};var n=function(){function i(e,t){var n=this;_classCallCheck(this,i),this.element=e,this.topMenu=this.element.find(".js-cta-topmenu-mobile"),this.hamburger=this.element.find(".js-cta-menu-mobile-hamburger"),this.menuLists=this.element.find(".js-cta-menu-list-mobile"),this.popouts=this.element.find(".js-cta-popout-mobile"),this.navTitle=this.element.find(".js-nav-title-mobile"),this.navTitle&&this.navTitle.click(function(){n.topMenu.toggleClass("active"),n.topMenu.hasClass("active")?(n.hidePopupsMobile(),n.showPopupMobile(0)):n.hidePopupsMobile()}),this.hamburger.click(function(){n.topMenu.toggleClass("active"),n.topMenu.hasClass("active")?(n.hidePopupsMobile(),n.showPopupMobile(0)):n.hidePopupsMobile()}),this.menuLists.each(function(e,t){var i=s(t);i.find(".js-cta-menu-item-mobile").click(function(){i.toggleClass("active")})}),this.menuLists.each(function(e,t){s(t).find(".js-cta-menu-subitem-mobile").click(function(e){var t=s(e.currentTarget).data("id");n.hidePopupsMobile(),n.showPopupMobile(t)||n.topMenu.removeClass("active")})}),this.popouts.each(function(e,t){var i=s(t);i.find(".js-cta-subnav-back").click(function(e){s(e.currentTarget);var t=i.data("parent");n.hidePopupsMobile(),n.showPopupMobile(t)})})}return _createClass(i,[{key:"showPopupMobile",value:function(e){var t=this.element.find('.js-cta-popout-mobile[data-id="'+e+'"]');return 0<t.length&&(t.addClass("active"),!0)}},{key:"hidePopupsMobile",value:function(){s(".js-cta-popout-mobile").each(function(e,t){s(t).removeClass("active")})}}]),i}();jQuery.fn.curlingNavMobile.Constructor=n}),jQuery(document).ready(function(e){jQuery.fn.imageCarousel=function(i){return this.each(function(){var e=jQuery(this),t=e.data("image.carousel");t||e.hasClass("js-image-carousel-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("image.carousel",t))})};var n=function(){function i(e,t){var a=this;_classCallCheck(this,i),this.element=e,this.slider=this.element.find(".js-slider"),this.sliderMobile=this.element.find(".js-slider-mobile"),this.isCircular=this.slider.hasClass("js-slider-circular"),this.navMobile=this.element.find(".js-carousel-mobile-nav"),this.paginationMobile=this.element.find(".js-carousel-mobile-nav-pagination"),this.arrowPrevMobile=this.element.find(".js-carousel-mobile-nav-prev"),this.arrowNextMobile=this.element.find(".js-carousel-mobile-nav-next"),this.nav=this.element.find(".js-carousel-nav"),this.pagination=this.element.find(".js-carousel-nav-pagination"),this.arrowPrev=this.element.find(".js-carousel-nav-prev"),this.arrowNext=this.element.find(".js-carousel-nav-next"),this.pagination&&this.slider.on("init reInit beforeChange",function(e,t,i,n){a.slider.find(".slick-slide").removeClass("level1 level2 level3"),n||(a.slider.find('.slick-slide[data-slick-index="0"]').addClass("level3"),a.slider.find('.slick-slide[data-slick-index="1"]').addClass("level2"));var s=(n||0)+1;a.pagination.text(s+"/"+t.slideCount)}),this.paginationMobile&&this.sliderMobile.on("init reInit beforeChange",function(e,t,i,n){var s=(n||0)+1;a.paginationMobile.text(s+"/"+t.slideCount)}),this.navMobile&&this.sliderMobile.children().length<=1&&this.navMobile.addClass("hidden"),this.nav&&this.slider.children().length<=1&&this.nav.addClass("hidden"),this.carouselMobile=this.sliderMobile.slick(),this.carousel=this.slider.slick({centerMode:this.isCircular,slidesToShow:this.isCircular?3:1,slidesToScroll:1,centerPadding:0,infinite:!this.isCircular}),this.carouselMobile&&this.arrowPrevMobile&&this.arrowPrevMobile.click(function(){a.sliderMobile.slick("slickPrev")}),this.carouselMobile&&this.arrowNextMobile&&this.arrowNextMobile.click(function(){a.sliderMobile.slick("slickNext")}),this.carousel&&this.arrowPrev&&this.arrowPrev.click(function(){a.slider.slick("slickPrev")}),this.carousel&&this.arrowNext&&this.arrowNext.click(function(){a.slider.slick("slickNext")})}return _createClass(i,[{key:"addAll",value:function(e,t,i){this.slider.find('.slick-slide[data-slick-index="'+t+'"]').addClass(i)}}]),i}();jQuery.fn.imageCarousel.Constructor=n}),jQuery(document).ready(function(e){jQuery.fn.mediaPlayer=function(i){return this.each(function(){var e=jQuery(this),t=e.data("media.player");t||e.hasClass("js-hero-container-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("media.player",t))})};var n=function e(t,i){var n=this;_classCallCheck(this,e),this.mediaPlayer=t,this.videoPlayer=this.mediaPlayer.find(".js-video-player"),this.videoBtnPlay=this.videoPlayer.find(".js-btn-play"),this.video=this.videoPlayer.find(".js-video"),this.videoOverlay=this.videoPlayer.find(".js-video-overlay"),this.content=this.mediaPlayer.find(".js-hero-content"),this.videoOverlay&&!this.videoOverlay.hasClass("hidden")&&this.videoOverlay.addClass("hidden"),0<this.video.length?this.video=this.video[0]:this.video=null,this.videoPlayer&&this.video&&this.videoPlayer.click(function(){n.video.paused?(n.video.play(),n.videoBtnPlay&&n.videoBtnPlay.addClass("hidden"),n.videoOverlay&&n.videoOverlay.addClass("hidden"),n.content&&n.content.addClass("hidden")):(n.video.pause(),n.videoBtnPlay&&n.videoBtnPlay.removeClass("hidden"),n.videoOverlay&&n.videoOverlay.removeClass("hidden"),n.content&&n.content.removeClass("hidden"))})};jQuery.fn.mediaPlayer.Constructor=n}),jQuery(document).ready(function(g){jQuery.fn.newsFeed=function(i){return this.each(function(){var e=jQuery(this),t=e.data("news.feed");t||e.hasClass("js-news-feed-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("news.feed",t))})};var n=function(){function i(e,t){_classCallCheck(this,i),this.element=e,this.newsFeedItems=this.element.find(".js-news-feed-items"),this.page=1,this.n=4,this.total=1,this.getAjaxRequest(this.page,this.n)}return _createClass(i,[{key:"getAjaxRequest",value:function(t,i){var n=this,e=this.element.data("category");console.log(t),e&&g.ajax({type:"POST",url:curling_ajax.ajax_url,data:{action:"ajax_request",page:t,n:i,category:e},dataType:"json",success:function(e){e&&e.success&&e.posts&&e.page&&e.total&&(n.page=t,n.n=i,n.total=e.total,n.newsFeedItems&&n.newsFeedItems.empty(),n.addPosts(e.posts,e),n.addPagination(e.page,e.total,e))}})}},{key:"addPosts",value:function(e,t){if(this.newsFeedItems)for(var i=0;i<e.length;++i){var n=e[i],s=g("<section>",{class:"news-feed-item block-news-promo block-news-promo-white"}),a=g("<div>",{class:"news-promo-container news-feed-container "+(i%2==1?"news-feed-reversed-container":"")});if(n.thumbnail){var o=g("<div>",{class:"news-feed-thumbnail-container news-promo-thumbnail-container"}),r=g("<img>",{class:"news-feed-thumbnail",src:n.thumbnail,alt:""});if(o.append(r),n.caption){var l=g("<div>",{class:"news-feed-caption-container news-promo-caption-container"}),c=g("<div>",{class:"news-promo-caption-wrapper"}),d=g("<p>",{class:"news-promo-caption"}).text(n.caption);c.append(d),l.append(c),o.append(l)}a.append(o)}var u=g("<div>",{class:"news-feed-info news-promo-info"}),h=g("<h3>",{class:"news-promo-title"}).text(n.title?n.title:""),f=g("<h4>",{class:"news-promo-date"}).text(n.date?n.date:""),p=g("<p>",{class:"news-feed-excerpt news-promo-excerpt"}).text(n.excerpt?n.excerpt:""),v=g("<a>",{class:"news-feed-link news-promo-link btn-link",href:""}),m=g("<h4>",{class:"btn-link-text red",href:""}).text("Continue Reading"),y=g("<img>",{class:"btn-link-arrow",src:t.arrowImageRed,alt:"arrow-right"}).text("Continue Reading");u.append(h),u.append(f),u.append(p),v.append(m),v.append(y),u.append(v),a.append(u),s.append(a),this.newsFeedItems.append(s)}}},{key:"addPagination",value:function(e,t,s){var a=this;if(1!==e||1!==t){for(var o=[],i=!1,n=!1,r=1===e||e===t?2:1,l=1;l<t+1;++l)Math.abs(l-e)<=r?o.push({isCurrent:l===e,text:l,large:!1}):l<e&&!i?(1<e-r&&o.push({isCurrent:!1,text:"arrow-left",large:!1}),o.push({isCurrent:!1,text:"PREV",large:!0}),i=!0):e<l&&!n&&(o.push({isCurrent:!1,text:"NEXT",large:!0}),n=!0,e+r<t&&o.push({isCurrent:!1,text:"arrow-right",large:!1}));for(var c=g("<div>",{class:"news-feed-pagination"}),d=function(e){var t=o[e],i=g("<div>",{class:"news-feed-pagination-block"+(t.isCurrent?" news-feed-pagination-block-selected":"")+(t.large?" news-feed-pagination-block-large":"")}),n=void 0;n="arrow-left"===t.text?g("<img>",{src:s.arrowImageLeft,alt:"arrow-left"}):"arrow-right"===t.text?g("<img>",{src:s.arrowImageRight,alt:"arrow-right"}):g("<span>",{class:"news-feed-pagination-text",src:s.arrowImageRight,alt:"arrow-right"}).text(t.text),i.click(function(){var e=a.page;switch(t.text){case"NEXT":e++;break;case"PREV":e--;break;case"arrow-left":e=1;break;case"arrow-right":e=a.total;break;default:e=t.text}a.getAjaxRequest(e,a.n)}),i.append(n),c.append(i)},u=0;u<o.length;++u)d(u);this.newsFeedItems.append(c)}}}]),i}();jQuery.fn.newsFeed.Constructor=n}),jQuery(document).ready(function(r){jQuery.fn.scheduleLinks=function(i){return this.each(function(){var e=jQuery(this),t=e.data("schedule.links");t||e.hasClass("js-schedule-links-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("schedule.links",t))})};var n=function e(t,i){var a=this;_classCallCheck(this,e),this.element=t,this.links=[],r("body").find(".js-schedule").each(function(e,t){var i=r(t),n=i.find(".js-schedule-title").text(),s="draw-schedule-"+e;i.attr("id",s),a.links.push({id:"#"+s,title:n})});for(var n=0;n<this.links.length;++n){var s=this.links[n],o=r("<a>",{class:"schedule-link-item clear",href:s.id}).append(r("<p>",{class:"schedule-link-text inverted"}).text(s.title));this.element.append(o)}};jQuery.fn.scheduleLinks.Constructor=n}),jQuery(document).ready(function(e){e.fn.blockHeroTimer=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.block-hero-timer");t||e.hasClass("js-block-hero-timer-init")||(t=new n(e,"object"==_typeof(i)&&i),e.data("curling.block-hero-timer",t))})};var n=function(){function o(e,t){var i=this;_classCallCheck(this,o),this.element=e;var n=this.element.data("date"),s=new Date,a=new Date(1e3*n);0<a-s&&(this.updateTime(a),window.setInterval(function(){i.updateTime(a)},1e3))}return _createClass(o,[{key:"updateTime",value:function(e){var t=(e-new Date)/1e3,i=Math.floor(t/86400),n=Math.floor((t-86400*i)/3600),s=Math.floor((t-86400*i-3600*n)/60),a=Math.floor(t-86400*i-3600*n-60*s);this.element.find(".js-days").text(i),this.element.find(".js-hours").text(n),this.element.find(".js-minutes").text(s),this.element.find(".js-seconds").text(a)}},{key:"inDays",value:function(e,t){var i=t.getTime(),n=e.getTime();return parseInt((i-n)/864e5)}},{key:"inWeeks",value:function(e,t){var i=t.getTime(),n=e.getTime();return parseInt((i-n)/6048e5)}},{key:"inMonths",value:function(e,t){var i=e.getFullYear(),n=t.getFullYear(),s=e.getMonth();return t.getMonth()+12*n-(s+12*i)}},{key:"inYears",value:function(e,t){return t.getFullYear()-e.getFullYear()}}]),o}();jQuery.fn.blockHeroTimer.Constructor=n}),jQuery(document).ready(function(e){responsivelySlick(e,e(window).width()),e(window).on("resize",function(){responsivelySlick(e,e(window).width())})}),jQuery(document).ready(function(e){e(".js-curling-nav").curlingNav(),e(".js-curling-nav-mobile").curlingNavMobile(),e(".js-hero-container").mediaPlayer(),e(".js-timer").blockHeroTimer(),e(".js-image-carousel").imageCarousel(),e(".js-news-feed").newsFeed(),e(".js-schedule-links").scheduleLinks()});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
