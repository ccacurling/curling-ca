"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}jQuery(document).ready(function(a){jQuery.fn.curlingNav=function(n){return this.each(function(){var e=jQuery(this),t=e.data("curling.nav");t||e.hasClass("js-curling-nav-init")||(t=new i(e,"object"==_typeof(n)&&n),e.data("curling.nav",t))})};var i=function e(t,n){_classCallCheck(this,e),this.element=t,this.menuItems=this.element.find(".nav-menu-primary .menu-item"),this.menuItems.each(function(e,t){var n=a(t),i=n.data("menu"),o=a(".nav-menu-popup[data-name='".concat(i,"']"));n.add(".nav-menu-popup[data-name='".concat(i,"']")).mouseenter(function(){n.addClass("active"),o.addClass("active")}).mouseleave(function(){n.removeClass("active"),o.removeClass("active")})})};jQuery.fn.curlingNav.Constructor=i}),jQuery(document).ready(function(o){jQuery.fn.curlingNavMobile=function(n){return this.each(function(){var e=jQuery(this),t=e.data("curling.mobilenav");t||e.hasClass("js-curling-mobilenav-init")||(t=new i(e,"object"==_typeof(n)&&n),e.data("curling.mobilenav",t))})};var i=function e(t,n){var i=this;_classCallCheck(this,e),_defineProperty(this,"showPopupMobile",function(e){var t=i.element.find('.js-cta-popout-mobile[data-id="'+e+'"]');return 0<t.length&&(t.addClass("active"),!0)}),_defineProperty(this,"hidePopupsMobile",function(){o(".js-cta-popout-mobile").each(function(e,t){o(t).removeClass("active")})}),this.element=t,this.topMenu=this.element.find(".js-cta-topmenu-mobile"),this.hamburger=this.element.find(".js-cta-menu-mobile-hamburger"),this.menuLists=this.element.find(".js-cta-menu-list-mobile"),this.popouts=this.element.find(".js-cta-popout-mobile"),this.hamburger.click(function(){i.topMenu.toggleClass("active"),i.topMenu.hasClass("active")?(i.hidePopupsMobile(),i.showPopupMobile(0)):i.hidePopupsMobile()}),this.menuLists.each(function(e,t){var n=o(t);n.find(".js-cta-menu-item-mobile").click(function(){n.toggleClass("active")})}),this.menuLists.each(function(e,t){o(t).find(".js-cta-menu-subitem-mobile").click(function(e){var t=o(e.currentTarget).data("id");i.hidePopupsMobile(),i.showPopupMobile(t)||i.topMenu.removeClass("active")})}),this.popouts.each(function(e,t){var n=o(t);n.find(".js-cta-subnav-back").click(function(e){o(e.currentTarget);var t=n.data("parent");i.hidePopupsMobile(),i.showPopupMobile(t)})})};jQuery.fn.curlingNavMobile.Constructor=i}),jQuery(document).ready(function(e){e.fn.blockHeroTimer=function(n){return this.each(function(){var e=jQuery(this),t=e.data("curling.block-hero-timer");t||e.hasClass("js-block-hero-timer-init")||(t=new i(e,"object"==_typeof(n)&&n),e.data("curling.block-hero-timer",t))})};var i=function e(t,n){var r=this;_classCallCheck(this,e),_defineProperty(this,"updateTime",function(e){var t=(e-new Date)/1e3,n=Math.floor(t/86400),i=Math.floor((t-86400*n)/3600),o=Math.floor((t-86400*n-3600*i)/60),a=Math.floor(t-86400*n-3600*i-60*o);r.element.find(".js-days").text(n),r.element.find(".js-hours").text(i),r.element.find(".js-minutes").text(o),r.element.find(".js-seconds").text(a)}),_defineProperty(this,"inDays",function(e,t){var n=t.getTime(),i=e.getTime();return parseInt((n-i)/864e5)}),_defineProperty(this,"inWeeks",function(e,t){var n=t.getTime(),i=e.getTime();return parseInt((n-i)/6048e5)}),_defineProperty(this,"inMonths",function(e,t){var n=e.getFullYear(),i=t.getFullYear(),o=e.getMonth();return t.getMonth()+12*i-(o+12*n)}),_defineProperty(this,"inYears",function(e,t){return t.getFullYear()-e.getFullYear()}),this.element=t;var i=this.element.data("date"),o=new Date,a=new Date(1e3*i);0<a-o&&(this.updateTime(a),window.setInterval(function(){r.updateTime(a)},1e3))};jQuery.fn.blockHeroTimer.Constructor=i}),jQuery(document).ready(function(e){e(".js-curling-nav").curlingNav(),e(".js-curling-nav-mobile").curlingNavMobile(),e(".block-timer").blockHeroTimer()});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
