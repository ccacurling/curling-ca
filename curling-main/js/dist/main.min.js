"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function responsivelySlick(e,t){var i=e(".text-callouts-group.slick-initialized");t<1170&&0===i.length?e(".text-callouts-group").slick({slidesToShow:1,slidesToScroll:1,speed:500,fade:!0,cssEase:"linear",dots:!0,centerMode:!0}):1170<=t&&0<i.length&&e(".text-callouts-group").slick("unslick")}jQuery(document).ready(function(e){jQuery.fn.accordion=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.accordion");t||e.hasClass("js-accordion-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-accordion-init"),e.data("curling.accordion",t))})};var a=function e(t,i){var a=this;_classCallCheck(this,e),this.accordion=t,this.trigger=this.accordion.find(".js-accordion-trigger"),this.content=this.accordion.find(".js-accordion-content"),this.trigger&&this.trigger.click(function(){a.accordion.toggleClass("active")})};jQuery.fn.accordion.Constructor=a}),jQuery(document).ready(function(s){jQuery.fn.curlingNav=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.nav");t||e.hasClass("js-curling-nav-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-curling-nav-init"),e.data("curling.nav",t))})};var a=function e(t,i){_classCallCheck(this,e),this.element=t,this.menuItems=this.element.find(".nav-menu-primary .menu-item"),this.menuItems.each(function(e,t){var i=s(t),a=i.data("menu"),n=s(".nav-menu-popup[data-name='".concat(a,"']"));i.add(".nav-menu-popup[data-name='".concat(a,"']")).mouseenter(function(){i.addClass("active"),n.addClass("active")}).mouseleave(function(){i.removeClass("active"),n.removeClass("active")})})};jQuery.fn.curlingNav.Constructor=a}),jQuery(document).ready(function(n){jQuery.fn.curlingNavMobile=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.mobilenav");t||e.hasClass("js-curling-mobilenav-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-curling-mobilenav-init"),e.data("curling.mobilenav",t))})};var a=function(){function i(e,t){var a=this;_classCallCheck(this,i),this.element=e,this.topMenu=this.element.find(".js-cta-topmenu-mobile"),this.hamburger=this.element.find(".js-cta-menu-mobile-hamburger"),this.menuLists=this.element.find(".js-cta-menu-list-mobile"),this.popouts=this.element.find(".js-cta-popout-mobile"),this.navTitle=this.element.find(".js-nav-title-mobile"),this.navTitle&&this.navTitle.click(function(){a.topMenu.toggleClass("active"),a.topMenu.hasClass("active")?(a.hidePopupsMobile(),a.showPopupMobile(0)):a.hidePopupsMobile()}),this.hamburger.click(function(){a.topMenu.toggleClass("active"),a.topMenu.hasClass("active")?(a.hidePopupsMobile(),a.showPopupMobile(0)):a.hidePopupsMobile()}),this.menuLists.each(function(e,t){var i=n(t);i.find(".js-cta-menu-item-mobile").click(function(){i.toggleClass("active")})}),this.menuLists.each(function(e,t){n(t).find(".js-cta-menu-subitem-mobile").click(function(e){var t=n(e.currentTarget).data("id");a.hidePopupsMobile(),a.showPopupMobile(t)||a.topMenu.removeClass("active")})}),this.popouts.each(function(e,t){var i=n(t);i.find(".js-cta-subnav-back").click(function(e){n(e.currentTarget);var t=i.data("parent");a.hidePopupsMobile(),a.showPopupMobile(t)})})}return _createClass(i,[{key:"showPopupMobile",value:function(e){var t=this.element.find('.js-cta-popout-mobile[data-id="'+e+'"]');return 0<t.length&&(t.addClass("active"),!0)}},{key:"hidePopupsMobile",value:function(){n(".js-cta-popout-mobile").each(function(e,t){n(t).removeClass("active")})}}]),i}();jQuery.fn.curlingNavMobile.Constructor=a}),jQuery(document).ready(function(a){jQuery.fn.imageCarousel=function(i){return this.each(function(){var e=jQuery(this),t=e.data("image.carousel");t||e.hasClass("js-image-carousel-init")||(t=new n(e,"object"==_typeof(i)&&i),e.addClass("js-image-carousel-init"),e.data("image.carousel",t))})};var n=function(){function i(e,t){_classCallCheck(this,i),this.element=e,this.sliderFeatured=this.element.find(".js-slider-featured"),this.slider=this.element.find(".js-slider"),this.sliderFeatured&&this.initFeatured(),this.slider&&this.initNormal()}return _createClass(i,[{key:"initNormal",value:function(){var s=this;this.sliderMobile=this.element.find(".js-slider-mobile"),this.isCircular=this.slider.hasClass("js-slider-circular"),this.navMobile=this.element.find(".js-carousel-mobile-nav"),this.paginationMobile=this.element.find(".js-carousel-mobile-nav-pagination"),this.arrowPrevMobile=this.element.find(".js-carousel-mobile-nav-prev"),this.arrowNextMobile=this.element.find(".js-carousel-mobile-nav-next"),this.nav=this.element.find(".js-carousel-nav"),this.pagination=this.element.find(".js-carousel-nav-pagination"),this.arrowPrev=this.element.find(".js-carousel-nav-prev"),this.arrowNext=this.element.find(".js-carousel-nav-next"),this.pagination&&this.slider.on("init reInit beforeChange",function(e,t,i,a){s.slider.find(".slick-slide").removeClass("level1 level2 level3"),a||(s.slider.find('.slick-slide[data-slick-index="0"]').addClass("level3"),s.slider.find('.slick-slide[data-slick-index="1"]').addClass("level2"));var n=(a||0)+1;s.pagination.text(n+"/"+t.slideCount)}),this.paginationMobile&&this.sliderMobile.on("init reInit beforeChange",function(e,t,i,a){var n=(a||0)+1;s.paginationMobile.text("IMAGE "+n+" OF "+t.slideCount)}),this.navMobile&&this.sliderMobile.children().length<=1&&this.navMobile.addClass("hidden"),this.nav&&this.slider.children().length<=1&&this.nav.addClass("hidden"),this.carouselMobile=this.sliderMobile.slick(),this.carousel=this.slider.slick({centerMode:this.isCircular,slidesToShow:this.isCircular?3:1,slidesToScroll:1,centerPadding:0,infinite:!this.isCircular}),this.carouselMobile&&this.arrowPrevMobile&&this.arrowPrevMobile.click(function(){s.sliderMobile.slick("slickPrev")}),this.carouselMobile&&this.arrowNextMobile&&this.arrowNextMobile.click(function(){s.sliderMobile.slick("slickNext")}),this.carousel&&this.arrowPrev&&this.arrowPrev.click(function(){s.slider.slick("slickPrev")}),this.carousel&&this.arrowNext&&this.arrowNext.click(function(){s.slider.slick("slickNext")})}},{key:"initFeatured",value:function(){var i=this;this.sliderFeatured.each(function(e,t){a(t).masterslider({width:767,height:488,layout:"partialview",space:0,loop:!0,view:"wave",controls:{arrows:{autohide:!1}}}),i.masterSlider=i.sliderFeatured.masterslider("slider"),i.masterSlider.api.addEventListener(MSSliderEvent.CHANGE_START,function(){var e=i.masterSlider.api.view.currentSlide.index+1,t=i.masterSlider.api.view.slideList.length;i.pagination.text(e+"/"+t),i.paginationMobile.text("IMAGE "+e+" OF "+t)})})}},{key:"addAll",value:function(e,t,i){this.slider.find('.slick-slide[data-slick-index="'+t+'"]').addClass(i)}}]),i}();jQuery.fn.imageCarousel.Constructor=n}),jQuery(document).ready(function(e){jQuery.fn.mediaPlayer=function(i){return this.each(function(){var e=jQuery(this),t=e.data("media.player");t||e.hasClass("js-hero-container-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-hero-container-init"),e.data("media.player",t))})};var a=function e(t,i){var a=this;_classCallCheck(this,e),this.mediaPlayer=t,this.videoPlayer=this.mediaPlayer.find(".js-video-player"),this.videoBtnPlay=this.videoPlayer.find(".js-btn-play"),this.video=this.videoPlayer.find(".js-video"),this.videoOverlay=this.videoPlayer.find(".js-video-overlay"),this.content=this.mediaPlayer.find(".js-hero-content"),this.videoOverlay&&!this.videoOverlay.hasClass("hidden")&&this.videoOverlay.addClass("hidden"),0<this.video.length?this.video=this.video[0]:this.video=null,this.videoPlayer&&this.video&&this.videoPlayer.click(function(){a.video.paused?(a.video.play(),a.videoBtnPlay&&a.videoBtnPlay.addClass("hidden"),a.videoOverlay&&a.videoOverlay.addClass("hidden"),a.content&&a.content.addClass("hidden")):(a.video.pause(),a.videoBtnPlay&&a.videoBtnPlay.removeClass("hidden"),a.videoOverlay&&a.videoOverlay.removeClass("hidden"),a.content&&a.content.removeClass("hidden"))})};jQuery.fn.mediaPlayer.Constructor=a}),jQuery(document).ready(function(w){jQuery.fn.newsFeed=function(i){return this.each(function(){var e=jQuery(this),t=e.data("news.feed");t||e.hasClass("js-news-feed-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-news-feed-init"),e.data("news.feed",t))})};var a=function(){function i(e,t){_classCallCheck(this,i),this.element=e,this.newsFeedItems=this.element.find(".js-news-feed-items"),this.additionalOptions=this.newsFeedItems.data("options"),this.page=1,this.n=4,this.total=1,console.log(this.additionalOptions),"noinitial"!=this.additionalOptions?this.getAjaxRequest(this.page,this.n):(this.leftArrow=this.newsFeedItems.data("arrow-left"),this.rightArrow=this.newsFeedItems.data("arrow-right"),this.total=this.newsFeedItems.data("total"),this.addPagination(1,this.total,{arrowImageLeft:this.leftArrow,arrowImageRight:this.rightArrow}))}return _createClass(i,[{key:"getAjaxRequest",value:function(t,i){var a=this,e=this.element.data("category");e&&w.ajax({type:"POST",url:curling_ajax.ajax_url,data:{action:"ajax_news_request",page:t,n:i,category:e},dataType:"json",success:function(e){console.log(e),e&&e.success&&e.posts&&e.page&&e.total&&(a.page=t,a.n=i,a.total=e.total,a.newsFeedItems&&a.newsFeedItems.empty(),a.addPosts(e.posts,e),a.addPagination(e.page,e.total,e))}})}},{key:"addPosts",value:function(e,t){if(this.newsFeedItems)for(var i=0;i<e.length;++i){var a=e[i],n=w("<section>",{class:"news-feed-item block-news-promo block-news-promo-white"}),s=w("<div>",{class:"news-promo-container news-feed-container "+(i%2==1?"news-feed-reversed-container":"")}),r=w("<div>",{class:"news-feed-thumbnail-container news-promo-thumbnail-container"});if(a.thumbnail){var o=w("<img>",{class:"news-feed-thumbnail",src:a.thumbnail,alt:""});if(r.append(o),a.caption){var l=w("<div>",{class:"news-feed-caption-container news-promo-caption-container"}),c=w("<div>",{class:"news-promo-caption-wrapper"}),d=w("<p>",{class:"news-promo-caption"}).text(a.caption);c.append(d),l.append(c),r.append(l)}s.append(r)}var u=w("<div>",{class:"news-feed-info news-promo-info"}),h=w("<h3>",{class:"news-promo-title"}).text(a.title?a.title:""),p=w("<h4>",{class:"news-promo-date"}).text(a.date?a.date:""),v=w("<p>",{class:"news-feed-excerpt news-promo-excerpt"}).text(a.excerpt?a.excerpt:""),f=w("<a>",{class:"news-feed-link news-promo-link btn-link",href:a.link}),m=w("<h4>",{class:"btn-link-text red",href:""}).text("Continue Reading"),g=w("<img>",{class:"btn-link-arrow",src:t.arrowImageRed,alt:"arrow-right"}).text("Continue Reading");u.append(h),u.append(p),u.append(v),f.append(m),f.append(g),u.append(f),s.append(u),n.append(s),this.newsFeedItems.append(n)}}},{key:"addPagination",value:function(e,t,n){var s=this;if(1!==e||1!==t){for(var r=[],i=!1,a=!1,o=1===e||e===t?2:1,l=1;l<t+1;++l)Math.abs(l-e)<=o?r.push({isCurrent:l===e,text:l,large:!1}):l<e&&!i?(1<e-o&&r.push({isCurrent:!1,text:"arrow-left",large:!1}),r.push({isCurrent:!1,text:"PREV",large:!0}),i=!0):e<l&&!a&&(r.push({isCurrent:!1,text:"NEXT",large:!0}),a=!0,e+o<t&&r.push({isCurrent:!1,text:"arrow-right",large:!1}));for(var c=w("<div>",{class:"news-feed-pagination"}),d=function(e){var t=r[e],i=w("<div>",{class:"news-feed-pagination-block"+(t.isCurrent?" news-feed-pagination-block-selected":"")+(t.large?" news-feed-pagination-block-large":"")}),a=void 0;a="arrow-left"===t.text?w("<img>",{src:n.arrowImageLeft,alt:"arrow-left"}):"arrow-right"===t.text?w("<img>",{src:n.arrowImageRight,alt:"arrow-right"}):w("<span>",{class:"news-feed-pagination-text",src:n.arrowImageRight,alt:"arrow-right"}).text(t.text),i.click(function(){var e=s.page;switch(t.text){case"NEXT":e++;break;case"PREV":e--;break;case"arrow-left":e=1;break;case"arrow-right":e=s.total;break;default:e=t.text}s.getAjaxRequest(e,s.n)}),i.append(a),c.append(i)},u=0;u<r.length;++u)d(u);this.newsFeedItems.append(c)}}}]),i}();jQuery.fn.newsFeed.Constructor=a}),jQuery(document).ready(function(h){jQuery.fn.eventsFeed=function(i){return this.each(function(){var e=jQuery(this),t=e.data("events.feed");t||e.hasClass("js-events-feed-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-events-feed-init"),e.data("events.feed",t))})};var a=function(){function i(e,t){_classCallCheck(this,i),this.element=e,this.eventsFeedItems=this.element.find(".js-events-feed-items"),this.page=1,this.n=4,this.total=1,this.getAjaxRequest(this.page,this.n)}return _createClass(i,[{key:"getAjaxRequest",value:function(t,i){var a=this;this.element.data("category")&&h.ajax({type:"POST",url:curling_ajax.ajax_url,data:{action:"ajax_events_request",page:t,n:i},dataType:"json",success:function(e){e&&e.success&&e.events&&e.page&&e.total&&(a.page=t,a.n=i,a.total=e.total,a.eventsFeedItems&&a.eventsFeedItems.empty(),a.addPosts(e.events),a.addPagination(e.page,e.total,e))}})}},{key:"addPosts",value:function(e){if(this.eventsFeedItems){for(var t=h("<div>",{class:"block-event-wrapper"}),i=0;i<e.length;++i){var a=e[i],n=h("<div>",{class:"block-event-feed-item-wrapper"}),s=h("<div>",{class:"block-event-info block-event-info-row"}),r=h("<div>",{class:"event-info-top-container"});a.event_logo&&r.append(h("<img>",{class:"event-info-top-image",src:a.event_logo,alt:"Event Logo"})),s.append(r);var o=h("<div>",{class:"block-event-info-details gray"}),l=h("<div>",{class:"block-event-info-detail-top-container"});a.name&&l.append(h("<h3>",{class:"block-event-sponsor-header"}).text(a.name)),a.operated_by&&l.append(h("<h3>",{class:"block-event-sponsor-operated-by"}).text("Operated by ".concat(a.operated_by))),a.date&&l.append(h("<h4>",{class:"block-event-sponsor-date"}).text(a.date)),a.location&&l.append(h("<h4>",{class:"block-event-sponsor-location"}).text(a.location)),o.append(l);var c=h("<div>",{class:"event-info-bottom-container"});a.buy_tickets_link&&c.append(h("<a>",{class:"block-event-sponsor-tickets-btn btn btn-red",href:a.buy_tickets_link,target:"blank"}).text("Buy Tickets"));var d=h("<div>",{class:"block-event-sponsor-links-container"});a.event_page_link&&d.append(h("<a>",{class:"block-event-sponsor-link subdomain red arrow-right-large-red",href:a.event_page_link,target:"blank"}).text("More Information")),a.draw_schedule_link&&d.append(h("<a>",{class:"block-event-sponsor-link subdomain red arrow-right-large-red",href:a.draw_schedule_link,target:"blank"}).text("Event Schedule")),a.meet_the_teams_link&&d.append(h("<a>",{class:"block-event-sponsor-link subdomain red arrow-right-large-red",href:a.meet_the_teams_link,target:"blank"}).text("Meet the teams")),c.append(d),o.append(c),s.append(o),n.append(s),t.append(n)}this.eventsFeedItems.append(t)}}},{key:"addPagination",value:function(e,t,n){var s=this;if(1!==e||1!==t){for(var r=[],i=!1,a=!1,o=1===e||e===t?2:1,l=1;l<t+1;++l)Math.abs(l-e)<=o?r.push({isCurrent:l===e,text:l,large:!1}):l<e&&!i?(1<e-o&&r.push({isCurrent:!1,text:"arrow-left",large:!1}),r.push({isCurrent:!1,text:"PREV",large:!0}),i=!0):e<l&&!a&&(r.push({isCurrent:!1,text:"NEXT",large:!0}),a=!0,e+o<t&&r.push({isCurrent:!1,text:"arrow-right",large:!1}));for(var c=h("<div>",{class:"events-feed-pagination"}),d=function(e){var t=r[e],i=h("<div>",{class:"events-feed-pagination-block"+(t.isCurrent?" events-feed-pagination-block-selected":"")+(t.large?" events-feed-pagination-block-large":"")}),a=void 0;a="arrow-left"===t.text?h("<img>",{src:n.arrowImageLeft,alt:"arrow-left"}):"arrow-right"===t.text?h("<img>",{src:n.arrowImageRight,alt:"arrow-right"}):h("<span>",{class:"events-feed-pagination-text",src:n.arrowImageRight,alt:"arrow-right"}).text(t.text),i.click(function(){var e=s.page;switch(t.text){case"NEXT":e++;break;case"PREV":e--;break;case"arrow-left":e=1;break;case"arrow-right":e=s.total;break;default:e=t.text}s.getAjaxRequest(e,s.n)}),i.append(a),c.append(i)},u=0;u<r.length;++u)d(u);this.eventsFeedItems.append(c)}}}]),i}();jQuery.fn.eventsFeed.Constructor=a}),jQuery(document).ready(function(o){jQuery.fn.scheduleLinks=function(i){return this.each(function(){var e=jQuery(this),t=e.data("schedule.links");t||e.hasClass("js-schedule-links-init")||(t=new a(e,"object"==_typeof(i)&&i),e.addClass("js-schedule-links-init"),e.data("schedule.links",t))})};var a=function e(t,i){var s=this;_classCallCheck(this,e),this.element=t,this.links=[],o("body").find(".js-schedule").each(function(e,t){var i=o(t),a=i.find(".js-schedule-title").text(),n="draw-schedule-"+e;i.attr("id",n),s.links.push({id:"#"+n,title:a})});for(var a=0;a<this.links.length;++a){var n=this.links[a],r=o("<a>",{class:"schedule-link-item clear",href:n.id}).append(o("<p>",{class:"schedule-link-text inverted"}).text(n.title));this.element.append(r)}};jQuery.fn.scheduleLinks.Constructor=a}),jQuery(document).ready(function(e){if(0<e(".wpgmza_map").length){e(".wpgmza_sl_query_div").append("<div class='map-switcher'><p class='listview-button selected'>List View</p><p class='mapview-button'>Map View</p></div>"),e(".listview-button").click(function(){e(this).hasClass("selected")||(e(this).addClass("selected"),e(".mapview-button").removeClass("selected"),e(".wpgmza_map").removeClass("map-reveal"),e(".wpgmza_marker_holder").show())}),e(".mapview-button").click(function(){e(this).hasClass("selected")||(e(this).addClass("selected"),e(".listview-button").removeClass("selected"),e(".wpgmza_marker_holder").hide(),e(".wpgmza_map").addClass("map-reveal"))})}}),jQuery(document).ready(function(e){e.fn.blockHeroTimer=function(i){return this.each(function(){var e=jQuery(this),t=e.data("curling.block-hero-timer");t||e.hasClass("js-block-hero-timer-init")||(t=new a(e,"object"==_typeof(i)&&i),e.data("curling.block-hero-timer",t))})};var a=function(){function r(e,t){var i=this;_classCallCheck(this,r),this.element=e;var a=this.element.data("date"),n=new Date,s=new Date(1e3*a);0<s-n&&(this.updateTime(s),window.setInterval(function(){i.updateTime(s)},1e3))}return _createClass(r,[{key:"updateTime",value:function(e){var t=(e-new Date)/1e3,i=Math.floor(t/86400),a=Math.floor((t-86400*i)/3600),n=Math.floor((t-86400*i-3600*a)/60),s=Math.floor(t-86400*i-3600*a-60*n);this.element.find(".js-days").text(i),this.element.find(".js-hours").text(a),this.element.find(".js-minutes").text(n),this.element.find(".js-seconds").text(s)}},{key:"inDays",value:function(e,t){var i=t.getTime(),a=e.getTime();return parseInt((i-a)/864e5)}},{key:"inWeeks",value:function(e,t){var i=t.getTime(),a=e.getTime();return parseInt((i-a)/6048e5)}},{key:"inMonths",value:function(e,t){var i=e.getFullYear(),a=t.getFullYear(),n=e.getMonth();return t.getMonth()+12*a-(n+12*i)}},{key:"inYears",value:function(e,t){return t.getFullYear()-e.getFullYear()}}]),r}();jQuery.fn.blockHeroTimer.Constructor=a}),jQuery(document).ready(function(e){responsivelySlick(e,e(window).width()),e(window).on("resize",function(){responsivelySlick(e,e(window).width())})}),jQuery(document).ready(function(e){e(".js-curling-nav").curlingNav(),e(".js-curling-nav-mobile").curlingNavMobile(),e(".js-hero-container").mediaPlayer(),e(".js-timer").blockHeroTimer(),e(".js-image-carousel").imageCarousel(),e(".js-news-feed").newsFeed(),e(".js-events-feed").eventsFeed(),e(".js-schedule-links").scheduleLinks(),e(".js-accordion").accordion()});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
