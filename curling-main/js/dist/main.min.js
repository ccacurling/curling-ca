"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}jQuery(document).ready(function(a){jQuery.fn.curlingNav=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.nav");i||e.hasClass("js-curling-nav-init")||(i=new n(e,"object"==_typeof(t)&&t),e.data("curling.nav",i))})};var n=function e(i,t){_classCallCheck(this,e),this.element=i,this.menuItems=this.element.find(".nav-menu-primary .menu-item"),this.menuItems.each(function(e,i){var t=a(i),n=t.data("menu"),s=a(".nav-menu-popup[data-name='".concat(n,"']"));t.add(".nav-menu-popup[data-name='".concat(n,"']")).mouseenter(function(){t.addClass("active"),s.addClass("active")}).mouseleave(function(){t.removeClass("active"),s.removeClass("active")})})};jQuery.fn.curlingNav.Constructor=n}),jQuery(document).ready(function(s){jQuery.fn.curlingNavMobile=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.mobilenav");i||e.hasClass("js-curling-mobilenav-init")||(i=new n(e,"object"==_typeof(t)&&t),e.data("curling.mobilenav",i))})};var n=function e(i,t){var n=this;_classCallCheck(this,e),_defineProperty(this,"showPopupMobile",function(e){var i=n.element.find('.js-cta-popout-mobile[data-id="'+e+'"]');return 0<i.length&&(i.addClass("active"),!0)}),_defineProperty(this,"hidePopupsMobile",function(){s(".js-cta-popout-mobile").each(function(e,i){s(i).removeClass("active")})}),this.element=i,this.topMenu=this.element.find(".js-cta-topmenu-mobile"),this.hamburger=this.element.find(".js-cta-menu-mobile-hamburger"),this.menuLists=this.element.find(".js-cta-menu-list-mobile"),this.popouts=this.element.find(".js-cta-popout-mobile"),this.hamburger.click(function(){n.topMenu.toggleClass("active"),n.topMenu.hasClass("active")?(n.hidePopupsMobile(),n.showPopupMobile(0)):n.hidePopupsMobile()}),this.menuLists.each(function(e,i){var t=s(i);t.find(".js-cta-menu-item-mobile").click(function(){t.toggleClass("active")})}),this.menuLists.each(function(e,i){s(i).find(".js-cta-menu-subitem-mobile").click(function(e){var i=s(e.currentTarget).data("id");n.hidePopupsMobile(),n.showPopupMobile(i)||n.topMenu.removeClass("active")})}),this.popouts.each(function(e,i){var t=s(i);t.find(".js-cta-subnav-back").click(function(e){s(e.currentTarget);var i=t.data("parent");n.hidePopupsMobile(),n.showPopupMobile(i)})})};jQuery.fn.curlingNavMobile.Constructor=n}),jQuery(document).ready(function(e){jQuery.fn.imageCarousel=function(t){return this.each(function(){var e=jQuery(this),i=e.data("image.carousel");i||e.hasClass("js-image-carousel-init")||(i=new n(e,"object"==_typeof(t)&&t),e.data("image.carousel",i))})};var n=function e(i,t){var a=this;_classCallCheck(this,e),_defineProperty(this,"addAll",function(e,i,t){a.slider.find('.slick-slide[data-slick-index="'+i+'"]').addClass(t)}),this.element=i,this.slider=this.element.find(".js-slider"),this.sliderMobile=this.element.find(".js-slider-mobile"),this.isCircular=this.slider.hasClass("js-slider-circular"),this.navMobile=this.element.find(".js-carousel-mobile-nav"),this.paginationMobile=this.element.find(".js-carousel-mobile-nav-pagination"),this.arrowPrevMobile=this.element.find(".js-carousel-mobile-nav-prev"),this.arrowNextMobile=this.element.find(".js-carousel-mobile-nav-next"),this.nav=this.element.find(".js-carousel-nav"),this.pagination=this.element.find(".js-carousel-nav-pagination"),this.arrowPrev=this.element.find(".js-carousel-nav-prev"),this.arrowNext=this.element.find(".js-carousel-nav-next"),this.pagination&&this.slider.on("init reInit beforeChange",function(e,i,t,n){a.slider.find(".slick-slide").removeClass("level1 level2 level3"),n||(a.slider.find('.slick-slide[data-slick-index="0"]').addClass("level3"),a.slider.find('.slick-slide[data-slick-index="1"]').addClass("level2"));var s=(n||0)+1;a.pagination.text(s+"/"+i.slideCount)}),this.paginationMobile&&this.sliderMobile.on("init reInit beforeChange",function(e,i,t,n){var s=(n||0)+1;a.paginationMobile.text(s+"/"+i.slideCount)}),this.navMobile&&this.sliderMobile.children().length<=1&&this.navMobile.addClass("hidden"),this.nav&&this.slider.children().length<=1&&this.nav.addClass("hidden"),this.carouselMobile=this.sliderMobile.slick(),this.carousel=this.slider.slick({centerMode:this.isCircular,slidesToShow:this.isCircular?3:1,slidesToScroll:1,centerPadding:0,infinite:!this.isCircular}),this.carouselMobile&&this.arrowPrevMobile&&this.arrowPrevMobile.click(function(){a.sliderMobile.slick("slickPrev")}),this.carouselMobile&&this.arrowNextMobile&&this.arrowNextMobile.click(function(){a.sliderMobile.slick("slickNext")}),this.carousel&&this.arrowPrev&&this.arrowPrev.click(function(){a.slider.slick("slickPrev")}),this.carousel&&this.arrowNext&&this.arrowNext.click(function(){a.slider.slick("slickNext")})};jQuery.fn.imageCarousel.Constructor=n}),jQuery(document).ready(function(e){jQuery.fn.mediaPlayer=function(t){return this.each(function(){var e=jQuery(this),i=e.data("media.player");i||e.hasClass("js-hero-container-init")||(i=new n(e,"object"==_typeof(t)&&t),e.data("media.player",i))})};var n=function e(i,t){var n=this;_classCallCheck(this,e),this.mediaPlayer=i,this.videoPlayer=this.mediaPlayer.find(".js-video-player"),this.videoBtnPlay=this.videoPlayer.find(".js-btn-play"),this.video=this.videoPlayer.find(".js-video"),this.videoOverlay=this.videoPlayer.find(".js-video-overlay"),this.content=this.mediaPlayer.find(".js-hero-content"),this.videoOverlay&&!this.videoOverlay.hasClass("hidden")&&this.videoOverlay.addClass("hidden"),0<this.video.length?this.video=this.video[0]:this.video=null,this.videoPlayer&&this.video&&this.videoPlayer.click(function(){n.video.paused?(n.video.play(),n.videoBtnPlay&&n.videoBtnPlay.addClass("hidden"),n.videoOverlay&&n.videoOverlay.addClass("hidden"),n.content&&n.content.addClass("hidden")):(n.video.pause(),n.videoBtnPlay&&n.videoBtnPlay.removeClass("hidden"),n.videoOverlay&&n.videoOverlay.removeClass("hidden"),n.content&&n.content.removeClass("hidden"))})};jQuery.fn.mediaPlayer.Constructor=n}),jQuery(document).ready(function(e){e.fn.blockHeroTimer=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.block-hero-timer");i||e.hasClass("js-block-hero-timer-init")||(i=new n(e,"object"==_typeof(t)&&t),e.data("curling.block-hero-timer",i))})};var n=function e(i,t){var o=this;_classCallCheck(this,e),_defineProperty(this,"updateTime",function(e){var i=(e-new Date)/1e3,t=Math.floor(i/86400),n=Math.floor((i-86400*t)/3600),s=Math.floor((i-86400*t-3600*n)/60),a=Math.floor(i-86400*t-3600*n-60*s);o.element.find(".js-days").text(t),o.element.find(".js-hours").text(n),o.element.find(".js-minutes").text(s),o.element.find(".js-seconds").text(a)}),_defineProperty(this,"inDays",function(e,i){var t=i.getTime(),n=e.getTime();return parseInt((t-n)/864e5)}),_defineProperty(this,"inWeeks",function(e,i){var t=i.getTime(),n=e.getTime();return parseInt((t-n)/6048e5)}),_defineProperty(this,"inMonths",function(e,i){var t=e.getFullYear(),n=i.getFullYear(),s=e.getMonth();return i.getMonth()+12*n-(s+12*t)}),_defineProperty(this,"inYears",function(e,i){return i.getFullYear()-e.getFullYear()}),this.element=i;var n=this.element.data("date"),s=new Date,a=new Date(1e3*n);0<a-s&&(this.updateTime(a),window.setInterval(function(){o.updateTime(a)},1e3))};jQuery.fn.blockHeroTimer.Constructor=n}),jQuery(document).ready(function(e){e(".js-curling-nav").curlingNav(),e(".js-curling-nav-mobile").curlingNavMobile(),e(".js-hero-container").mediaPlayer(),e(".block-timer").blockHeroTimer(),e(".js-image-carousel").imageCarousel()});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
