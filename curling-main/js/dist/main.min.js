'use strict';

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

jQuery(document).ready(function ($) {
  jQuery.fn.curlingNav = function (options) {
    return this.each(function () {
      var $this = jQuery(this),
          data = $this.data('curling.nav');

      if (!data && !$this.hasClass('js-curling-nav-init')) {
        data = new CurlingNav($this, _typeof(options) == 'object' && options);
        $this.data('curling.nav', data);
      }
    });
  };

  var CurlingNav = function CurlingNav(element, options) {
    _classCallCheck(this, CurlingNav);

    this.element = element;
    this.menuItems = this.element.find('.nav-menu-primary .menu-item');
    this.menuItems.each(function (index, element) {
      var $this = $(element);
      var menu_name = $this.data('menu');
      var $popup = $(".nav-menu-popup[data-name='".concat(menu_name, "']"));
      var $multi = $this.add(".nav-menu-popup[data-name='".concat(menu_name, "']"));
      $multi.mouseenter(function () {
        $this.addClass('active');
        $popup.addClass('active');
      }).mouseleave(function () {
        $this.removeClass('active');
        $popup.removeClass('active');
      });
    });
  };

  jQuery.fn.curlingNav.Constructor = CurlingNav;
});

jQuery(document).ready(function ($) {
  jQuery.fn.curlingNavMobile = function (options) {
    return this.each(function () {
      var $this = jQuery(this),
          data = $this.data('curling.mobilenav');

      if (!data && !$this.hasClass('js-curling-mobilenav-init')) {
        data = new CurlingNavMobile($this, _typeof(options) == 'object' && options);
        $this.data('curling.mobilenav', data);
      }
    });
  };

  var CurlingNavMobile = function CurlingNavMobile(_element, options) {
    var _this = this;

    _classCallCheck(this, CurlingNavMobile);

    _defineProperty(this, "showPopupMobile", function (id) {
      var popups = _this.element.find('.js-cta-popout-mobile[data-id="' + id + '"]');

      if (popups.length > 0) {
        popups.addClass('active');
        return true;
      } else {
        return false;
      }
    });

    _defineProperty(this, "hidePopupsMobile", function () {
      $('.js-cta-popout-mobile').each(function (index, element) {
        var $this = $(element);
        $this.removeClass('active');
      });
    });

    this.element = _element;
    this.topMenu = this.element.find('.js-cta-topmenu-mobile');
    this.hamburger = this.element.find('.js-cta-menu-mobile-hamburger');
    this.menuLists = this.element.find('.js-cta-menu-list-mobile');
    this.popouts = this.element.find('.js-cta-popout-mobile');
    this.hamburger.click(function () {
      _this.topMenu.toggleClass('active');

      if (_this.topMenu.hasClass('active')) {
        _this.hidePopupsMobile();

        _this.showPopupMobile(0);
      } else {
        _this.hidePopupsMobile();
      }
    });
    this.menuLists.each(function (index, element) {
      var $this = $(element);
      $this.find('.js-cta-menu-item-mobile').click(function () {
        $this.toggleClass('active');
      });
    });
    this.menuLists.each(function (index, element) {
      var $this = $(element);
      $this.find('.js-cta-menu-subitem-mobile').click(function (e) {
        var $target = $(e.currentTarget);
        var id = $target.data('id');

        _this.hidePopupsMobile();

        if (!_this.showPopupMobile(id)) {
          _this.topMenu.removeClass('active');
        }
      });
    });
    this.popouts.each(function (index, element) {
      var $this = $(element);
      $this.find('.js-cta-subnav-back').click(function (e) {
        var $target = $(e.currentTarget);
        var id = $this.data('parent');

        _this.hidePopupsMobile();

        _this.showPopupMobile(id);
      });
    });
  };

  jQuery.fn.curlingNavMobile.Constructor = CurlingNavMobile;
});

jQuery(document).ready(function ($) {
  $('.js-curling-nav').curlingNav();
  $('.js-curling-nav-mobile').curlingNavMobile();
});
