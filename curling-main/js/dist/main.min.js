"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,i){for(var t=0;t<i.length;t++){var n=i[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,i,t){return i&&_defineProperties(e.prototype,i),t&&_defineProperties(e,t),e}function responsivelySlick(e,i){var t=e(".text-callouts-group.slick-initialized");i<1170&&0===t.length?e(".text-callouts-group").slick({slidesToShow:1,slidesToScroll:1,speed:500,fade:!0,cssEase:"linear",dots:!0,centerMode:!0}):1170<=i&&0<t.length&&e(".text-callouts-group").slick("unslick")}jQuery(document).ready(function(e){jQuery.fn.accordion=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.accordion");i||e.hasClass("js-accordion-init")||(i=new n(e,"object"==_typeof(t)&&t),e.addClass("js-accordion-init"),e.data("curling.accordion",i))})};var n=function e(i,t){var n=this;_classCallCheck(this,e),this.accordion=i,this.trigger=this.accordion.find(".js-accordion-trigger"),this.content=this.accordion.find(".js-accordion-content"),this.trigger&&this.trigger.click(function(){n.accordion.toggleClass("active")})};jQuery.fn.accordion.Constructor=n}),jQuery(document).ready(function(a){jQuery.fn.curlingNav=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.nav");i||e.hasClass("js-curling-nav-init")||(i=new n(e,"object"==_typeof(t)&&t),e.addClass("js-curling-nav-init"),e.data("curling.nav",i))})};var n=function e(i,t){_classCallCheck(this,e),this.element=i,this.menuItems=this.element.find(".nav-menu-primary .menu-item"),this.menuItems.each(function(e,i){var t=a(i),n=t.data("menu"),s=a(".nav-menu-popup[data-name='".concat(n,"']"));t.add(".nav-menu-popup[data-name='".concat(n,"']")).mouseenter(function(){t.addClass("active"),s.addClass("active")}).mouseleave(function(){t.removeClass("active"),s.removeClass("active")})})};jQuery.fn.curlingNav.Constructor=n}),jQuery(document).ready(function(s){jQuery.fn.curlingNavMobile=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.mobilenav");i||e.hasClass("js-curling-mobilenav-init")||(i=new n(e,"object"==_typeof(t)&&t),e.addClass("js-curling-mobilenav-init"),e.data("curling.mobilenav",i))})};var n=function(){function t(e,i){var n=this;_classCallCheck(this,t),this.element=e,this.topMenu=this.element.find(".js-cta-topmenu-mobile"),this.hamburger=this.element.find(".js-cta-menu-mobile-hamburger"),this.menuLists=this.element.find(".js-cta-menu-list-mobile"),this.popouts=this.element.find(".js-cta-popout-mobile"),this.navTitle=this.element.find(".js-nav-title-mobile"),this.navTitle&&this.navTitle.click(function(){n.topMenu.toggleClass("active"),n.topMenu.hasClass("active")?(n.hidePopupsMobile(),n.showPopupMobile(0)):n.hidePopupsMobile()}),this.hamburger.click(function(){n.topMenu.toggleClass("active"),n.topMenu.hasClass("active")?(n.hidePopupsMobile(),n.showPopupMobile(0)):n.hidePopupsMobile()}),this.menuLists.each(function(e,i){var t=s(i);t.find(".js-cta-menu-item-mobile").click(function(){t.toggleClass("active")})}),this.menuLists.each(function(e,i){s(i).find(".js-cta-menu-subitem-mobile").click(function(e){var i=s(e.currentTarget).data("id");n.hidePopupsMobile(),n.showPopupMobile(i)||n.topMenu.removeClass("active")})}),this.popouts.each(function(e,i){var t=s(i);t.find(".js-cta-subnav-back").click(function(e){s(e.currentTarget);var i=t.data("parent");n.hidePopupsMobile(),n.showPopupMobile(i)})})}return _createClass(t,[{key:"showPopupMobile",value:function(e){var i=this.element.find('.js-cta-popout-mobile[data-id="'+e+'"]');return 0<i.length&&(i.addClass("active"),!0)}},{key:"hidePopupsMobile",value:function(){s(".js-cta-popout-mobile").each(function(e,i){s(i).removeClass("active")})}}]),t}();jQuery.fn.curlingNavMobile.Constructor=n}),jQuery(document).ready(function(n){jQuery.fn.imageCarousel=function(t){return this.each(function(){var e=jQuery(this),i=e.data("image.carousel");i||e.hasClass("js-image-carousel-init")||(i=new s(e,"object"==_typeof(t)&&t),e.addClass("js-image-carousel-init"),e.data("image.carousel",i))})};var s=function(){function t(e,i){_classCallCheck(this,t),this.element=e,this.sliderFeatured=this.element.find(".js-slider-featured"),this.slider=this.element.find(".js-slider"),this.sliderFeatured&&this.initFeatured(),this.slider&&this.initNormal()}return _createClass(t,[{key:"initNormal",value:function(){var a=this;this.sliderMobile=this.element.find(".js-slider-mobile"),this.isCircular=this.slider.hasClass("js-slider-circular"),this.navMobile=this.element.find(".js-carousel-mobile-nav"),this.paginationMobile=this.element.find(".js-carousel-mobile-nav-pagination"),this.arrowPrevMobile=this.element.find(".js-carousel-mobile-nav-prev"),this.arrowNextMobile=this.element.find(".js-carousel-mobile-nav-next"),this.nav=this.element.find(".js-carousel-nav"),this.pagination=this.element.find(".js-carousel-nav-pagination"),this.arrowPrev=this.element.find(".js-carousel-nav-prev"),this.arrowNext=this.element.find(".js-carousel-nav-next"),this.pagination&&this.slider.on("init reInit beforeChange",function(e,i,t,n){a.slider.find(".slick-slide").removeClass("level1 level2 level3"),n||(a.slider.find('.slick-slide[data-slick-index="0"]').addClass("level3"),a.slider.find('.slick-slide[data-slick-index="1"]').addClass("level2"));var s=(n||0)+1;a.pagination.text(s+"/"+i.slideCount)}),this.paginationMobile&&this.sliderMobile.on("init reInit beforeChange",function(e,i,t,n){var s=(n||0)+1;a.paginationMobile.text("IMAGE "+s+" OF "+i.slideCount)}),this.navMobile&&this.sliderMobile.children().length<=1&&this.navMobile.addClass("hidden"),this.nav&&this.slider.children().length<=1&&this.nav.addClass("hidden"),this.carouselMobile=this.sliderMobile.slick(),this.carousel=this.slider.slick({centerMode:this.isCircular,slidesToShow:this.isCircular?3:1,slidesToScroll:1,centerPadding:0,infinite:!this.isCircular}),this.carouselMobile&&this.arrowPrevMobile&&this.arrowPrevMobile.click(function(){a.sliderMobile.slick("slickPrev")}),this.carouselMobile&&this.arrowNextMobile&&this.arrowNextMobile.click(function(){a.sliderMobile.slick("slickNext")}),this.carousel&&this.arrowPrev&&this.arrowPrev.click(function(){a.slider.slick("slickPrev")}),this.carousel&&this.arrowNext&&this.arrowNext.click(function(){a.slider.slick("slickNext")})}},{key:"initFeatured",value:function(){var t=this;this.sliderFeatured.each(function(e,i){n(i).masterslider({width:767,height:488,layout:"partialview",space:0,loop:!0,view:"wave",controls:{arrows:{autohide:!1}}}),t.masterSlider=t.sliderFeatured.masterslider("slider"),t.masterSlider.api.addEventListener(MSSliderEvent.CHANGE_START,function(){var e=t.masterSlider.api.view.currentSlide.index+1,i=t.masterSlider.api.view.slideList.length;t.pagination.text(e+"/"+i)})})}},{key:"addAll",value:function(e,i,t){this.slider.find('.slick-slide[data-slick-index="'+i+'"]').addClass(t)}}]),t}();jQuery.fn.imageCarousel.Constructor=s}),jQuery(document).ready(function(e){jQuery.fn.mediaPlayer=function(t){return this.each(function(){var e=jQuery(this),i=e.data("media.player");i||e.hasClass("js-hero-container-init")||(i=new n(e,"object"==_typeof(t)&&t),e.addClass("js-hero-container-init"),e.data("media.player",i))})};var n=function e(i,t){var n=this;_classCallCheck(this,e),this.mediaPlayer=i,this.videoPlayer=this.mediaPlayer.find(".js-video-player"),this.videoBtnPlay=this.videoPlayer.find(".js-btn-play"),this.video=this.videoPlayer.find(".js-video"),this.videoOverlay=this.videoPlayer.find(".js-video-overlay"),this.content=this.mediaPlayer.find(".js-hero-content"),this.videoOverlay&&!this.videoOverlay.hasClass("hidden")&&this.videoOverlay.addClass("hidden"),0<this.video.length?this.video=this.video[0]:this.video=null,this.videoPlayer&&this.video&&this.videoPlayer.click(function(){n.video.paused?(n.video.play(),n.videoBtnPlay&&n.videoBtnPlay.addClass("hidden"),n.videoOverlay&&n.videoOverlay.addClass("hidden"),n.content&&n.content.addClass("hidden")):(n.video.pause(),n.videoBtnPlay&&n.videoBtnPlay.removeClass("hidden"),n.videoOverlay&&n.videoOverlay.removeClass("hidden"),n.content&&n.content.removeClass("hidden"))})};jQuery.fn.mediaPlayer.Constructor=n}),jQuery(document).ready(function(y){jQuery.fn.newsFeed=function(t){return this.each(function(){var e=jQuery(this),i=e.data("news.feed");i||e.hasClass("js-news-feed-init")||(i=new n(e,"object"==_typeof(t)&&t),e.addClass("js-news-feed-init"),e.data("news.feed",i))})};var n=function(){function t(e,i){_classCallCheck(this,t),this.element=e,this.newsFeedItems=this.element.find(".js-news-feed-items"),this.page=1,this.n=4,this.total=1,this.getAjaxRequest(this.page,this.n)}return _createClass(t,[{key:"getAjaxRequest",value:function(i,t){var n=this,e=this.element.data("category");e&&y.ajax({type:"POST",url:curling_ajax.ajax_url,data:{action:"ajax_request",page:i,n:t,category:e},dataType:"json",success:function(e){console.log(e),e&&e.success&&e.posts&&e.page&&e.total&&(n.page=i,n.n=t,n.total=e.total,n.newsFeedItems&&n.newsFeedItems.empty(),n.addPosts(e.posts,e),n.addPagination(e.page,e.total,e))}})}},{key:"addPosts",value:function(e,i){if(this.newsFeedItems)for(var t=0;t<e.length;++t){var n=e[t],s=y("<section>",{class:"news-feed-item block-news-promo block-news-promo-white"}),a=y("<div>",{class:"news-promo-container news-feed-container "+(t%2==1?"news-feed-reversed-container":"")});if(n.thumbnail){var r=y("<div>",{class:"news-feed-thumbnail-container news-promo-thumbnail-container"}),o=y("<img>",{class:"news-feed-thumbnail",src:n.thumbnail,alt:""});if(r.append(o),n.caption){var l=y("<div>",{class:"news-feed-caption-container news-promo-caption-container"}),c=y("<div>",{class:"news-promo-caption-wrapper"}),d=y("<p>",{class:"news-promo-caption"}).text(n.caption);c.append(d),l.append(c),r.append(l)}a.append(r)}var u=y("<div>",{class:"news-feed-info news-promo-info"}),h=y("<h3>",{class:"news-promo-title"}).text(n.title?n.title:""),f=y("<h4>",{class:"news-promo-date"}).text(n.date?n.date:""),v=y("<p>",{class:"news-feed-excerpt news-promo-excerpt"}).text(n.excerpt?n.excerpt:""),p=y("<a>",{class:"news-feed-link news-promo-link btn-link",href:n.link}),m=y("<h4>",{class:"btn-link-text red",href:""}).text("Continue Reading"),g=y("<img>",{class:"btn-link-arrow",src:i.arrowImageRed,alt:"arrow-right"}).text("Continue Reading");u.append(h),u.append(f),u.append(v),p.append(m),p.append(g),u.append(p),a.append(u),s.append(a),this.newsFeedItems.append(s)}}},{key:"addPagination",value:function(e,i,s){var a=this;if(1!==e||1!==i){for(var r=[],t=!1,n=!1,o=1===e||e===i?2:1,l=1;l<i+1;++l)Math.abs(l-e)<=o?r.push({isCurrent:l===e,text:l,large:!1}):l<e&&!t?(1<e-o&&r.push({isCurrent:!1,text:"arrow-left",large:!1}),r.push({isCurrent:!1,text:"PREV",large:!0}),t=!0):e<l&&!n&&(r.push({isCurrent:!1,text:"NEXT",large:!0}),n=!0,e+o<i&&r.push({isCurrent:!1,text:"arrow-right",large:!1}));for(var c=y("<div>",{class:"news-feed-pagination"}),d=function(e){var i=r[e],t=y("<div>",{class:"news-feed-pagination-block"+(i.isCurrent?" news-feed-pagination-block-selected":"")+(i.large?" news-feed-pagination-block-large":"")}),n=void 0;n="arrow-left"===i.text?y("<img>",{src:s.arrowImageLeft,alt:"arrow-left"}):"arrow-right"===i.text?y("<img>",{src:s.arrowImageRight,alt:"arrow-right"}):y("<span>",{class:"news-feed-pagination-text",src:s.arrowImageRight,alt:"arrow-right"}).text(i.text),t.click(function(){var e=a.page;switch(i.text){case"NEXT":e++;break;case"PREV":e--;break;case"arrow-left":e=1;break;case"arrow-right":e=a.total;break;default:e=i.text}a.getAjaxRequest(e,a.n)}),t.append(n),c.append(t)},u=0;u<r.length;++u)d(u);this.newsFeedItems.append(c)}}}]),t}();jQuery.fn.newsFeed.Constructor=n}),jQuery(document).ready(function(o){jQuery.fn.scheduleLinks=function(t){return this.each(function(){var e=jQuery(this),i=e.data("schedule.links");i||e.hasClass("js-schedule-links-init")||(i=new n(e,"object"==_typeof(t)&&t),e.addClass("js-schedule-links-init"),e.data("schedule.links",i))})};var n=function e(i,t){var a=this;_classCallCheck(this,e),this.element=i,this.links=[],o("body").find(".js-schedule").each(function(e,i){var t=o(i),n=t.find(".js-schedule-title").text(),s="draw-schedule-"+e;t.attr("id",s),a.links.push({id:"#"+s,title:n})});for(var n=0;n<this.links.length;++n){var s=this.links[n],r=o("<a>",{class:"schedule-link-item clear",href:s.id}).append(o("<p>",{class:"schedule-link-text inverted"}).text(s.title));this.element.append(r)}};jQuery.fn.scheduleLinks.Constructor=n}),jQuery(document).ready(function(e){e.fn.blockHeroTimer=function(t){return this.each(function(){var e=jQuery(this),i=e.data("curling.block-hero-timer");i||e.hasClass("js-block-hero-timer-init")||(i=new n(e,"object"==_typeof(t)&&t),e.data("curling.block-hero-timer",i))})};var n=function(){function r(e,i){var t=this;_classCallCheck(this,r),this.element=e;var n=this.element.data("date"),s=new Date,a=new Date(1e3*n);0<a-s&&(this.updateTime(a),window.setInterval(function(){t.updateTime(a)},1e3))}return _createClass(r,[{key:"updateTime",value:function(e){var i=(e-new Date)/1e3,t=Math.floor(i/86400),n=Math.floor((i-86400*t)/3600),s=Math.floor((i-86400*t-3600*n)/60),a=Math.floor(i-86400*t-3600*n-60*s);this.element.find(".js-days").text(t),this.element.find(".js-hours").text(n),this.element.find(".js-minutes").text(s),this.element.find(".js-seconds").text(a)}},{key:"inDays",value:function(e,i){var t=i.getTime(),n=e.getTime();return parseInt((t-n)/864e5)}},{key:"inWeeks",value:function(e,i){var t=i.getTime(),n=e.getTime();return parseInt((t-n)/6048e5)}},{key:"inMonths",value:function(e,i){var t=e.getFullYear(),n=i.getFullYear(),s=e.getMonth();return i.getMonth()+12*n-(s+12*t)}},{key:"inYears",value:function(e,i){return i.getFullYear()-e.getFullYear()}}]),r}();jQuery.fn.blockHeroTimer.Constructor=n}),jQuery(document).ready(function(e){responsivelySlick(e,e(window).width()),e(window).on("resize",function(){responsivelySlick(e,e(window).width())})}),jQuery(document).ready(function(e){e(".js-curling-nav").curlingNav(),e(".js-curling-nav-mobile").curlingNavMobile(),e(".js-hero-container").mediaPlayer(),e(".js-timer").blockHeroTimer(),e(".js-image-carousel").imageCarousel(),e(".js-news-feed").newsFeed(),e(".js-schedule-links").scheduleLinks(),e(".js-accordion").accordion()});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
